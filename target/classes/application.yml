logging.file: ./log/email/console.log
logging.file.max-history: 10
logging.file.max-size: 100MB
logging:
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} %logger{36} %-5level - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} %logger{40} [%thread] %-5level %logger{36} - %msg%n"
  level:
    .: INFO
    org.springframework: ERROR
    com.ttb.fleet: DEBUG
    com.netflix: OFF
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path= /swagger-ui.html
spring:
  profiles:
    active: default
  main:
    banner-mode: CONSOLE
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: none
      show-sql: true
  datasource:
    url: ${DATABASE_CONNECTION:jdbc:postgresql://localhost:5432/notification?currentSchema=public}
    username: ${DATABASE_USERNAME:postgres}
    password: ${DATABASE_PASSWORD:nttdata}
    initialization-mode: always
    platform: postgres
  nacos:
    discovery:
      server-addr: ${NACOS_ENDPOINT:127.0.0.1:8848}
      auto-register: true
  cloud:
    nacos:
      discovery:
        server-addr: ${NACOS_ENDPOINT:127.0.0.1:8848}
        namespace: ${NACOS_NAMESPACE:9cd826a1-2bb5-4eeb-a2fb-20cb95ea65f2}

  mail:
    host: ${SMTP_HOST:smtp.gmail.com}
    port: ${SMTP_PORT:587}
    username: applogicthailand@gmail.com
    password:
    # Other properties
    smtp:
      auth: true
      connectiontimeout: 5000
      timeout: 5000
      writetimeout: 5000
      starttls:
        enable: true
      ssl:
        trust: smtp.gmail.com
        protocols: TLSv1.2
      # SSL, post 465
#      socketFactory:
#        port: 465
#        class: javax.net.ssl.SSLSocketFactory
  application:
    name: fleet-notification
    description: ${applicaiton.name} module is a Spring Boot application
security:
  basic:
    enabled: false
management:
  security:
    enabled: false
  endpoints:
    gateway:
      enable: true
    web:
      base-path: /management
      path-mapping:
        health: /healthcheck
      exposure:
        include: "*"
      discovery:
        enabled: false
    health:
      ldap:
        enabled: false
      mail:
        enabled: false
      group:
        custom:
          show-details: "when-authorized"
          roles: "admin"
          status:
            order: "fatal,up"
            http-mapping:
              fatal: 500
              out-of-service: 500

server:
  port: ${SERVICE_PORT:8081}
eureka:
  client:
    service-url:
      default-zone: ${EUREKA_URI:http://localhost:8761/eureka}
  instance:
    preferIpAddress: true
thread-pool: 20
notification:
  sms:
    url: http://172.20.5.X/smsgw/smshttphandler_enc.ashx
